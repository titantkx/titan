// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: titan/farming/distribution_info.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// DistributionInfo defines the reward distribution info.
type DistributionInfo struct {
	LastDistributionTime time.Time `protobuf:"bytes,1,opt,name=last_distribution_time,json=lastDistributionTime,proto3,stdtime" json:"last_distribution_time"`
}

func (m *DistributionInfo) Reset()         { *m = DistributionInfo{} }
func (m *DistributionInfo) String() string { return proto.CompactTextString(m) }
func (*DistributionInfo) ProtoMessage()    {}
func (*DistributionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e51cb1e83d3ea1e0, []int{0}
}
func (m *DistributionInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DistributionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DistributionInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DistributionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributionInfo.Merge(m, src)
}
func (m *DistributionInfo) XXX_Size() int {
	return m.Size()
}
func (m *DistributionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DistributionInfo proto.InternalMessageInfo

func (m *DistributionInfo) GetLastDistributionTime() time.Time {
	if m != nil {
		return m.LastDistributionTime
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*DistributionInfo)(nil), "titan.farming.DistributionInfo")
}

func init() {
	proto.RegisterFile("titan/farming/distribution_info.proto", fileDescriptor_e51cb1e83d3ea1e0)
}

var fileDescriptor_e51cb1e83d3ea1e0 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2d, 0xc9, 0x2c, 0x49,
	0xcc, 0xd3, 0x4f, 0x4b, 0x2c, 0xca, 0xcd, 0xcc, 0x4b, 0xd7, 0x4f, 0xc9, 0x2c, 0x2e, 0x29, 0xca,
	0x4c, 0x2a, 0x2d, 0xc9, 0xcc, 0xcf, 0x8b, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x05, 0x2b, 0xd3, 0x83, 0x2a, 0x93, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0xcb,
	0xe8, 0x83, 0x58, 0x10, 0x45, 0x52, 0xf2, 0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x60, 0x5e,
	0x52, 0x69, 0x9a, 0x7e, 0x49, 0x66, 0x6e, 0x6a, 0x71, 0x49, 0x62, 0x6e, 0x01, 0x44, 0x81, 0x52,
	0x1e, 0x97, 0x80, 0x0b, 0x92, 0x05, 0x9e, 0x79, 0x69, 0xf9, 0x42, 0x51, 0x5c, 0x62, 0x39, 0x89,
	0xc5, 0x25, 0xf1, 0x28, 0x36, 0x83, 0x34, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x49, 0xe9,
	0x41, 0x4c, 0xd5, 0x83, 0x99, 0xaa, 0x17, 0x02, 0x33, 0xd5, 0x89, 0xe3, 0xc4, 0x3d, 0x79, 0x86,
	0x09, 0xf7, 0xe5, 0x19, 0x83, 0x44, 0x40, 0x66, 0x20, 0x9b, 0x0d, 0x52, 0xe4, 0xe4, 0x7c, 0xe2,
	0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x4e, 0x78, 0x2c, 0xc7, 0x70,
	0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x51, 0x9a, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49,
	0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0x60, 0xaf, 0x95, 0x64, 0x57, 0x40, 0x18, 0xfa, 0x15, 0xf0, 0xc0,
	0x28, 0xa9, 0x2c, 0x48, 0x2d, 0x4e, 0x62, 0x03, 0x5b, 0x6c, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x37, 0xf4, 0xed, 0x47, 0x2a, 0x01, 0x00, 0x00,
}

func (m *DistributionInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DistributionInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DistributionInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.LastDistributionTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.LastDistributionTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintDistributionInfo(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintDistributionInfo(dAtA []byte, offset int, v uint64) int {
	offset -= sovDistributionInfo(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DistributionInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.LastDistributionTime)
	n += 1 + l + sovDistributionInfo(uint64(l))
	return n
}

func sovDistributionInfo(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDistributionInfo(x uint64) (n int) {
	return sovDistributionInfo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DistributionInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDistributionInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DistributionInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DistributionInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDistributionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDistributionInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDistributionInfo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDistributionInfo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.LastDistributionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDistributionInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDistributionInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDistributionInfo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDistributionInfo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDistributionInfo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDistributionInfo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDistributionInfo
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDistributionInfo
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDistributionInfo
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDistributionInfo        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDistributionInfo          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDistributionInfo = fmt.Errorf("proto: unexpected end of group")
)
