// Code generated by MockGen. DO NOT EDIT.
// Source: x/gov/types/expected_keepers.go

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockDistributionKeeper is a mock of DistributionKeeper interface.
type MockDistributionKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockDistributionKeeperMockRecorder
}

// MockDistributionKeeperMockRecorder is the mock recorder for MockDistributionKeeper.
type MockDistributionKeeperMockRecorder struct {
	mock *MockDistributionKeeper
}

// NewMockDistributionKeeper creates a new mock instance.
func NewMockDistributionKeeper(ctrl *gomock.Controller) *MockDistributionKeeper {
	mock := &MockDistributionKeeper{ctrl: ctrl}
	mock.recorder = &MockDistributionKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDistributionKeeper) EXPECT() *MockDistributionKeeperMockRecorder {
	return m.recorder
}

// FundCommunityPoolFromModule mocks base method.
func (m *MockDistributionKeeper) FundCommunityPoolFromModule(ctx types.Context, amount types.Coins, senderModule string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FundCommunityPoolFromModule", ctx, amount, senderModule)
	ret0, _ := ret[0].(error)
	return ret0
}

// FundCommunityPoolFromModule indicates an expected call of FundCommunityPoolFromModule.
func (mr *MockDistributionKeeperMockRecorder) FundCommunityPoolFromModule(ctx, amount, senderModule interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FundCommunityPoolFromModule", reflect.TypeOf((*MockDistributionKeeper)(nil).FundCommunityPoolFromModule), ctx, amount, senderModule)
}

// GetFeePoolCommunityCoins mocks base method.
func (m *MockDistributionKeeper) GetFeePoolCommunityCoins(ctx types.Context) types.DecCoins {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFeePoolCommunityCoins", ctx)
	ret0, _ := ret[0].(types.DecCoins)
	return ret0
}

// GetFeePoolCommunityCoins indicates an expected call of GetFeePoolCommunityCoins.
func (mr *MockDistributionKeeperMockRecorder) GetFeePoolCommunityCoins(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFeePoolCommunityCoins", reflect.TypeOf((*MockDistributionKeeper)(nil).GetFeePoolCommunityCoins), ctx)
}

// GetValidatorOutstandingRewardsCoins mocks base method.
func (m *MockDistributionKeeper) GetValidatorOutstandingRewardsCoins(ctx types.Context, val types.ValAddress) types.DecCoins {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValidatorOutstandingRewardsCoins", ctx, val)
	ret0, _ := ret[0].(types.DecCoins)
	return ret0
}

// GetValidatorOutstandingRewardsCoins indicates an expected call of GetValidatorOutstandingRewardsCoins.
func (mr *MockDistributionKeeperMockRecorder) GetValidatorOutstandingRewardsCoins(ctx, val interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValidatorOutstandingRewardsCoins", reflect.TypeOf((*MockDistributionKeeper)(nil).GetValidatorOutstandingRewardsCoins), ctx, val)
}
